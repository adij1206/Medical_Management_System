/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package NewSalesRecord;

import Forms.MainActivity;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hp
 */
public class NewSalesRecord extends javax.swing.JFrame {
Connection conn = null;
PreparedStatement pst = null;
ResultSet rs = null;
String[] productName;
String[] quantity;
double[] amountPerRows;
    /**
     * Creates new form NewSalesRecord
     */
    public NewSalesRecord() {
        initComponents();
        conn = Forms.ConnectionToDB.connectToDb();
        this.setSize(1400, 800);
        populateCompany();
        
    }
     public void populateCompany(){
        try{
            String sql = "SELECT company_name FROM company";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
             while(rs.next()){
               nameCombo.addItem(rs.getString("company_name"));
           }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    public void populateCategory(){
          ctgCombo.removeAllItems();
        try{
            String sql = "SELECT category FROM product_category";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            while(rs.next()){
                ctgCombo.addItem(rs.getString("category"));
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nameCombo = new javax.swing.JComboBox();
        ctgCombo = new javax.swing.JComboBox();
        productNameCombo = new javax.swing.JComboBox();
        qtyTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        cartTable = new javax.swing.JTable();
        addCartBtn = new javax.swing.JButton();
        removeBtn = new javax.swing.JButton();
        purchaseBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Eras Demi ITC", 0, 18)); // NOI18N
        jLabel1.setText("Medical Store Management System");

        jLabel2.setText("Company Name     :");

        jLabel3.setText("Product Category   :");

        jLabel4.setText("Product Name       :");

        jLabel5.setText("Quantity               :");

        nameCombo.setModel(new DefaultComboBoxModel(new String[]{ " " }));
        nameCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                nameComboItemStateChanged(evt);
            }
        });
        nameCombo.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                nameComboPropertyChange(evt);
            }
        });

        ctgCombo.setEnabled(false);

        productNameCombo.setEnabled(false);

        qtyTxt.setEnabled(false);
        qtyTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyTxtActionPerformed(evt);
            }
        });

        cartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Company Name", "Product Category", "Product Name", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(cartTable);

        addCartBtn.setText("Add to Cart");
        addCartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCartBtnActionPerformed(evt);
            }
        });

        removeBtn.setText("Remove");
        removeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addCartBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nameCombo, 0, 197, Short.MAX_VALUE)
                            .addComponent(ctgCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(productNameCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(qtyTxt)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(removeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(nameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(ctgCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(productNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(qtyTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 199, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addCartBtn)
                            .addComponent(removeBtn)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        purchaseBtn.setText("Confirm Purchase");
        purchaseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchaseBtnActionPerformed(evt);
            }
        });

        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(218, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(purchaseBtn)
                .addGap(437, 437, 437))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jLabel1)
                .addGap(43, 43, 43)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(purchaseBtn)
                .addGap(65, 65, 65)
                .addComponent(backBtn)
                .addContainerGap(261, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addCartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCartBtnActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel)cartTable.getModel();
        model.addRow(new Object[]{nameCombo.getSelectedItem(),ctgCombo.getSelectedItem(), productNameCombo.getSelectedItem(),qtyTxt.getText()});
    }//GEN-LAST:event_addCartBtnActionPerformed

    private void purchaseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchaseBtnActionPerformed
        // TODO add your handling code here:
        getPriceOfProductName();   
    }//GEN-LAST:event_purchaseBtnActionPerformed

    private void nameComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_nameComboItemStateChanged
        // TODO add your handling code here:
        populateCategory();
        ctgCombo.enable(true);
        productNameCombo.enable(true);
        productNameCombo.removeAllItems();
        try{

           String sql = "SELECT product_name FROM products WHERE company_name='"+nameCombo.getSelectedItem()+"'";
           pst = conn.prepareStatement(sql);
           rs = pst.executeQuery();
           while(rs.next()){
               productNameCombo.addItem(rs.getString("product_name"));
           }
 
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_nameComboItemStateChanged

    private void nameComboPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_nameComboPropertyChange
        // TODO add your handling code here:
        qtyTxt.enable(true);
    }//GEN-LAST:event_nameComboPropertyChange

    private void removeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeBtnActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel)cartTable.getModel();
        if (cartTable.getSelectedRow() != -1) {
            model.removeRow(cartTable.getSelectedRow());
        }
    }//GEN-LAST:event_removeBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        Forms.MainActivity ma = new MainActivity();
        ma.setVisible(true);
        setVisible(false);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    private void qtyTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qtyTxtActionPerformed
     public int getSum(){
        int rowsCount  = cartTable.getRowCount();
        int sum = 0;
        for(int i=0;i < rowsCount; i++){
            sum = sum+Integer.parseInt(cartTable.getValueAt(i, 3).toString());
        }
        return sum;
    }
    public void insertAllProducts(double val){
       DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        Calendar calobj = Calendar.getInstance();
        try{
       
            int rowsCount  = cartTable.getRowCount();
            for(int i =0;i < rowsCount; i++){
               String sql  = "INSERT INTO sales_record(product_name,company_name,date_of_sale,quantity,amount) VALUES (?,?,?,?,?)";
                pst = conn.prepareStatement(sql);
                pst.setString(1, cartTable.getValueAt(i, 2).toString());
                pst.setString(2, cartTable.getValueAt(i, 0).toString());
                pst.setString(3, df.format(calobj.getTime()));
                pst.setString(4, cartTable.getValueAt(i, 3).toString());
                pst.setString(5, String.valueOf(val));
                   pst.execute();
            }                 
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    
// Insert the updated value of quantity inproducts after purchase
    public void insertIntoProduct(int qty,int i){
        String q = "UPDATE products SET quantity ='"+ Integer.toString(qty)+"'"+ "where product_name='" +cartTable.getValueAt(i, 2).toString()+"'";
        Statement st;
        try {
            st = conn.createStatement();
            st.executeUpdate(q);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,ex);
         }
        
    }
    
    public void getPriceOfProductName(){
       int des = JOptionPane.showConfirmDialog(null, "Confirm Purchase?","Confirm",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
       if(des==0){
             try{
                    int sum= 0; 
                    int count = 1; // it is used for validation of Quantity available or not
                    int rowsCount = cartTable.getRowCount();
                    for(int i=0; i<rowsCount;i++){
                        int qty = 0;
                        String sql = "SELECT * FROM products WHERE product_name='"+cartTable.getValueAt(i, 2).toString()+"'";
                        pst = conn.prepareStatement(sql);
                        rs = pst.executeQuery();
                        if(rs.next()){
                            sum  += Integer.parseInt(cartTable.getValueAt(i, 3).toString()) * Double.parseDouble(rs.getString("price_per_unit")); 
                            if(Integer.parseInt(rs.getString("quantity"))>0)
                            {
                                qty  = Integer.parseInt(rs.getString("quantity")) - Integer.parseInt(cartTable.getValueAt(i, 3).toString());
                                
                            }
                            else{
                                JOptionPane.showMessageDialog(null, "Product is currently not Available");
                                count--;
                            }
                        }
                        insertAllProducts(Double.parseDouble(cartTable.getValueAt(i, 3).toString()) * Double.parseDouble(rs.getString("price_per_unit")));
                       if(qty>0){
                        insertIntoProduct(qty,i);}
                       else{
                           JOptionPane.showMessageDialog(null, "Your Required quantity is not available."
                                   + "Currently we have "+Integer.toUnsignedString(qty));
                           count--;
                       }
                    }
                    if(count<=0){
                     JOptionPane.showMessageDialog(null, "Product Added");
                       
                   MainActivity mp = new MainActivity();
                   //close();
                   mp.setVisible(true);
                   setVisible(true);
                   setDefaultCloseOperation(EXIT_ON_CLOSE);
                   dispose();
                    }
              //     JOptionPane.showMessageDialog(null, String.valueOf(sum));

                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
       }else{
           
       }
      
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewSalesRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewSalesRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewSalesRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewSalesRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewSalesRecord().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCartBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JTable cartTable;
    private javax.swing.JComboBox ctgCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox nameCombo;
    private javax.swing.JComboBox productNameCombo;
    private javax.swing.JButton purchaseBtn;
    private javax.swing.JTextField qtyTxt;
    private javax.swing.JButton removeBtn;
    // End of variables declaration//GEN-END:variables
}
